# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml

analyzer:
  exclude:
    - lib/**.g.dart
    - lib/**.freezed.dart
    - lib/l10n/generated/**
    - lib/appwrite.models.dart
  errors:
    todo: ignore
linter:
  # The lint rules applied to this project can be customized in the
  # section below to disable rules from the `package:flutter_lints/flutter.yaml`
  # included above or to enable additional rules. A list of all available lints
  # and their documentation is published at https://dart.dev/lints.
  #
  # Instead of disabling a lint rule for the entire project in the
  # section below, it can also be suppressed for a single line of code
  # or a specific dart file by using the `// ignore: name_of_lint` and
  # `// ignore_for_file: name_of_lint` syntax on the line or in the file
  # producing the lint.
  rules:
    - require_trailing_commas
    - avoid_escaping_inner_quotes
    - avoid_void_async
    - cancel_subscriptions
    - cascade_invocations
    - avoid_equals_and_hash_code_on_mutable_classes
    - avoid_positional_boolean_parameters
    - cast_nullable_to_non_nullable
    - combinators_ordering
    - discarded_futures
    - prefer_single_quotes
    - join_return_with_assignment
    - leading_newlines_in_multiline_strings
    - no_literal_bool_comparisons
    - only_throw_errors
    - prefer_asserts_in_initializer_lists
    - prefer_asserts_with_message
    - prefer_const_declarations
    - prefer_const_constructors
    - prefer_const_literals_to_create_immutables
    - prefer_constructors_over_static_methods
    - prefer_expression_function_bodies
    - prefer_final_in_for_each
    - prefer_final_locals
    - prefer_foreach
    - prefer_if_elements_to_conditional_expressions
    - prefer_int_literals
    - prefer_null_aware_method_calls
    - unawaited_futures
    - unnecessary_await_in_return
    - unnecessary_breaks
    - unnecessary_lambdas
    - unnecessary_null_checks
    - unnecessary_parenthesis

# Additional information about this file can be found at
# https://dart.dev/guides/language/analysis-options
